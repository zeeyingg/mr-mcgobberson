PREDICTIONS
* return render_template('login.html') will run and display the HTML file in the web browser
* print statements are just diagnostic tests to show users what's going on behind the scenes
* We think when the form is submitted, the web browser will display "Waaaa hoooo HAAH"
* We're unsure of what will be printed in the terminal
* After the form has been submitted, the site will move to a different page using "/auth"

DISCO
* Line 34 in login.html brings you to the webpage with "/auth" appended to the address
When we changed "/auth,"
* Flask was built around HTML standards
* Automatic, default value for buttons are "Submit query"
* When a value is submitted into the form, flask automatically puts the value into a dictionary as part of a key-value
* If the import statement in line 6 in app.py is removed, it causes a 500 internal server error that indicates the server
encountered a problem that prevented it from fulfilling the request -- a general catch-all error statement

QCC
* What is jinja?
* What are requests, request args and request headers?
* What does app.route exactly do regarding file access? Why do we still need it?
* When we tried running this file from our home computer while ssh'ed into the school computer, the web browser did not generate anything on the page. Why is this happening?
* From DZJ: I'm still struggling to get these files to run on my home machine and installing flask in my virtual environment.
How would I go about fixing this?
